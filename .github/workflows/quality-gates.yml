name: quality-gates

on:
  push:
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
  pull_request:
    paths-ignore:
      - '**/*.md'
      - 'docs/**'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  fmt-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust-setup
        with:
          toolchain: "1.90.0"
      - name: Rustfmt check
        run: cargo fmt --all -- --check

  rustdoc-lints:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust-setup
        with:
          toolchain: "1.90.0"
      - name: Build docs with warnings-as-errors
        run: cargo doc --no-deps -D warnings

  clippy-all-libs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust-setup
        with:
          toolchain: "1.90.0"
      - name: Clippy strict (all libs)
        run: |
          set -euo pipefail
          pkgs=(app sb-core sb-adapters sb-config sb-metrics sb-types sb-proto sb-runtime sb-platform sb-transport sb-subscribe sb-api)
          for p in "${pkgs[@]}"; do
            echo "== Clippy(lib) for $p =="
            cargo clippy -p "$p" --lib --features metrics -- \
              -D warnings \
              -W clippy::pedantic -W clippy::nursery \
              -D clippy::unwrap_used -D clippy::expect_used -D clippy::panic \
              -D clippy::todo -D clippy::unimplemented -D clippy::undocumented_unsafe_blocks \
              -D dead_code
          done
