name: CI

on:
  push:
    branches: [ main, master ]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
  pull_request:
    branches: [ main, master ]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust-setup

      - name: Cargo fmt (check)
        run: cargo fmt --all -- --check

      - name: Cargo clippy (deny warnings)
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Cargo check (workspace)
        run: cargo check --features "http,socks,metrics,dns" --workspace

      - name: Unit tests (sb-core/sb-adapters)
        run: |
          cargo test --features "http,socks,metrics,dns" -p sb-core -p sb-adapters -- --nocapture

  e2e:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust-setup
      - name: E2E tests (adapters only)
        env:
          RUST_TEST_THREADS: 1
        run: |
          cargo test --features "http,socks,metrics,e2e" -p sb-adapters -- --nocapture

  dns-udp-e2e:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust-setup
      - name: UDP DNS pool tests (optional)
        env:
          RUST_TEST_THREADS: 1
        run: |
          cargo test -q --features "http,socks,metrics,dns,dns_udp" -p sb-core -- --nocapture

  dns-doh-dot-e2e:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust-setup
      - name: DoH/DoT tests (optional)
        env:
          RUST_TEST_THREADS: 1
        run: |
          cargo test -q --features "http,socks,metrics,dns,dns_doh,dns_dot" -p sb-core -- --nocapture

  router-async-smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust-setup
      - name: Router async smoke (adapters)
        run: |
          cargo test -q --features "http,socks,metrics,dns" -p sb-adapters -- --nocapture

  router-rules-file:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust-setup
      - name: Router rules/index/file tests (optional)
        run: |
          cargo test -q --features "http,socks,metrics,dns" -p sb-core --test router_rules_index -- --nocapture
          cargo test -q --features "http,socks,metrics,dns" -p sb-core --test router_geoip_async -- --nocapture
          cargo test -q --features "http,socks,metrics,dns" -p sb-core --test router_rules_file -- --nocapture

  clippy-strict-platform:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/rust-setup
      - name: Clippy strict (sb-platform lib-only)
        run: |
          cargo clippy -p sb-platform --lib -- -D warnings -W clippy::pedantic -W clippy::nursery -D clippy::unwrap_used -D clippy::expect_used -D clippy::panic -D clippy::todo -D clippy::unimplemented -D clippy::undocumented_unsafe_blocks

  cli-contract-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: CLI JSON contract tests (route/check/version/admin/bench)
        env:
          RUST_TEST_THREADS: 1
        run: |
          cargo test -p app --test cli_json_contract -- --nocapture
          cargo test -p app --test admin_contract -- --nocapture
          cargo test -p app --test bench_io_contract -- --nocapture
