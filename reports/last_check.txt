    Checking sb-core v0.1.0 (/Users/bob/Desktop/Projects/ING/sing/singbox-rust/crates/sb-core)
warning: unused import: `super::*`
   --> crates/sb-core/src/metrics/registry_ext.rs:305:9
    |
305 |     use super::*;
    |         ^^^^^^^^
    |
    = note: `#[warn(unused_imports)]` on by default

warning: unused import: `loom::thread`
   --> crates/sb-core/src/metrics/registry_ext.rs:306:9
    |
306 |     use loom::thread;
    |         ^^^^^^^^^^^^

warning: unused attribute `allow`
    --> crates/sb-core/src/router/engine.rs:1075:17
     |
1075 |                 #[allow(clippy::print_stderr)]
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
note: the built-in attribute `allow` will be ignored, since it's applied to the macro invocation `eprintln`
    --> crates/sb-core/src/router/engine.rs:1076:17
     |
1076 |                 eprintln!("RwLock poisoned; proceeding with inner guard");
     |                 ^^^^^^^^
     = note: `#[warn(unused_attributes)]` on by default

warning: unused attribute `allow`
    --> crates/sb-core/src/router/engine.rs:1160:17
     |
1160 |                 #[allow(clippy::print_stderr)]
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
note: the built-in attribute `allow` will be ignored, since it's applied to the macro invocation `eprintln`
    --> crates/sb-core/src/router/engine.rs:1161:17
     |
1161 |                 eprintln!("RwLock poisoned; proceeding with inner guard");
     |                 ^^^^^^^^

warning: unused attribute `allow`
    --> crates/sb-core/src/router/engine.rs:1285:13
     |
1285 |             #[allow(clippy::print_stderr)]
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
note: the built-in attribute `allow` will be ignored, since it's applied to the macro invocation `eprintln`
    --> crates/sb-core/src/router/engine.rs:1286:13
     |
1286 |             eprintln!("RwLock poisoned; proceeding with inner guard");
     |             ^^^^^^^^

warning: unused attribute `allow`
    --> crates/sb-core/src/router/mod.rs:1923:17
     |
1923 |                 #[allow(clippy::print_stderr)]
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
note: the built-in attribute `allow` will be ignored, since it's applied to the macro invocation `eprintln`
    --> crates/sb-core/src/router/mod.rs:1924:17
     |
1924 |                 eprintln!("RwLock poisoned; proceeding with inner guard");
     |                 ^^^^^^^^

warning: use of deprecated function `metrics::outbound::label_kind`: preserved for JSON contract/future export
  --> crates/sb-core/src/metrics/outbound.rs:84:32
   |
84 |         cv.with_label_values(&[label_kind(kind), "attempt"]).inc();
   |                                ^^^^^^^^^^
   |
   = note: `#[warn(deprecated)]` on by default

warning: use of deprecated function `metrics::outbound::label_kind`: preserved for JSON contract/future export
  --> crates/sb-core/src/metrics/outbound.rs:97:32
   |
97 |         cv.with_label_values(&[label_kind(kind), "success"]).inc();
   |                                ^^^^^^^^^^

warning: use of deprecated function `metrics::outbound::label_kind`: preserved for JSON contract/future export
   --> crates/sb-core/src/metrics/outbound.rs:110:32
    |
110 |         cv.with_label_values(&[label_kind(kind), "failure"]).inc();
    |                                ^^^^^^^^^^

warning: use of deprecated function `metrics::outbound::label_kind`: preserved for JSON contract/future export
   --> crates/sb-core/src/metrics/outbound.rs:124:32
    |
124 |         cv.with_label_values(&[label_kind(kind), label_err(class)]).inc();
    |                                ^^^^^^^^^^

warning: use of deprecated function `metrics::outbound::label_err`: preserved for JSON contract/future export
   --> crates/sb-core/src/metrics/outbound.rs:124:50
    |
124 |         cv.with_label_values(&[label_kind(kind), label_err(class)]).inc();
    |                                                  ^^^^^^^^^

warning: unused variable: `run`
   --> crates/sb-core/src/dns/resolve.rs:371:5
    |
371 |     run: F,
    |     ^^^ help: if this is intentional, prefix it with an underscore: `_run`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `ck`
   --> crates/sb-core/src/dns/resolve.rs:416:9
    |
416 |     let ck = Key {
    |         ^^ help: if this is intentional, prefix it with an underscore: `_ck`

warning: unused variable: `ck`
   --> crates/sb-core/src/dns/resolve.rs:485:5
    |
485 |     ck: super::cache::Key,
    |     ^^ help: if this is intentional, prefix it with an underscore: `_ck`

warning: unused variable: `domain`
   --> crates/sb-core/src/dns/upstream.rs:392:31
    |
392 |     async fn query_dot(&self, domain: &str, record_type: RecordType) -> Result<DnsAnswer> {
    |                               ^^^^^^ help: if this is intentional, prefix it with an underscore: `_domain`

warning: unused variable: `record_type`
   --> crates/sb-core/src/dns/upstream.rs:392:45
    |
392 |     async fn query_dot(&self, domain: &str, record_type: RecordType) -> Result<DnsAnswer> {
    |                                             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_record_type`

warning: value assigned to `need_fallback` is never read
   --> crates/sb-core/src/dns/mod.rs:380:33
    |
380 | ...                   need_fallback = true;
    |                       ^^^^^^^^^^^^^
    |
    = help: maybe it is overwritten before being read?
    = note: `#[warn(unused_assignments)]` on by default

error[E0384]: cannot assign twice to immutable variable `need_fallback`
   --> crates/sb-core/src/dns/mod.rs:343:17
    |
336 |         let need_fallback = false;
    |             ------------- first assignment to `need_fallback`
...
343 |                 need_fallback = true;
    |                 ^^^^^^^^^^^^^^^^^^^^ cannot assign twice to immutable variable
    |
help: consider making this binding mutable
    |
336 |         let mut need_fallback = false;
    |             +++

error[E0384]: cannot assign twice to immutable variable `need_fallback`
   --> crates/sb-core/src/dns/mod.rs:380:33
    |
336 |         let need_fallback = false;
    |             ------------- first assignment to `need_fallback`
...
380 |                                 need_fallback = true;
    |                                 ^^^^^^^^^^^^^^^^^^^^ cannot assign twice to immutable variable
    |
help: consider making this binding mutable
    |
336 |         let mut need_fallback = false;
    |             +++

warning: unused import: `OutboundConnector`
 --> crates/sb-core/src/inbound/socks5.rs:8:46
  |
8 | use crate::adapter::{Bridge, InboundService, OutboundConnector};
  |                                              ^^^^^^^^^^^^^^^^^

warning: unused import: `chacha20poly1305::aead::Aead`
  --> crates/sb-core/src/outbound/ss/aead_tcp.rs:15:5
   |
15 | use chacha20poly1305::aead::Aead as ChachaAead;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Digest`
 --> crates/sb-core/src/outbound/vmess/aead.rs:8:12
  |
8 | use sha2::{Digest as ShaDigest, Sha256};
  |            ^^^^^^

warning: unused import: `tokio::io::AsyncWriteExt`
   --> crates/sb-core/src/outbound/hysteria2.rs:323:13
    |
323 |         use tokio::io::AsyncWriteExt;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::io::AsyncWriteExt`
   --> crates/sb-core/src/outbound/hysteria2.rs:432:13
    |
432 |         use tokio::io::AsyncWriteExt;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::io::AsyncReadExt`
   --> crates/sb-core/src/outbound/hysteria2.rs:438:13
    |
438 |         use tokio::io::AsyncReadExt;
    |             ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::io::AsyncRead`
   --> crates/sb-core/src/outbound/hysteria2.rs:713:13
    |
713 |         use tokio::io::AsyncRead;
    |             ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::io::AsyncWrite`
   --> crates/sb-core/src/outbound/hysteria2.rs:727:13
    |
727 |         use tokio::io::AsyncWrite;
    |             ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::io::AsyncWrite`
   --> crates/sb-core/src/outbound/hysteria2.rs:741:13
    |
741 |         use tokio::io::AsyncWrite;
    |             ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::io::AsyncWrite`
   --> crates/sb-core/src/outbound/hysteria2.rs:755:13
    |
755 |         use tokio::io::AsyncWrite;
    |             ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::io::AsyncWriteExt`
  --> crates/sb-core/src/outbound/tuic.rs:94:13
   |
94 |         use tokio::io::AsyncWriteExt;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::io::AsyncReadExt`
   --> crates/sb-core/src/outbound/tuic.rs:104:13
    |
104 |         use tokio::io::AsyncReadExt;
    |             ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::io::AsyncWriteExt`
   --> crates/sb-core/src/outbound/tuic.rs:142:13
    |
142 |         use tokio::io::AsyncWriteExt;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::io::AsyncWriteExt`
   --> crates/sb-core/src/outbound/tuic.rs:225:13
    |
225 |         use tokio::io::AsyncWriteExt;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::io::AsyncReadExt`
   --> crates/sb-core/src/outbound/tuic.rs:253:13
    |
253 |         use tokio::io::AsyncReadExt;
    |             ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::io::AsyncRead`
   --> crates/sb-core/src/outbound/tuic.rs:348:13
    |
348 |         use tokio::io::AsyncRead;
    |             ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::io::AsyncWrite`
   --> crates/sb-core/src/outbound/tuic.rs:362:13
    |
362 |         use tokio::io::AsyncWrite;
    |             ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::io::AsyncWrite`
   --> crates/sb-core/src/outbound/tuic.rs:376:13
    |
376 |         use tokio::io::AsyncWrite;
    |             ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::io::AsyncWrite`
   --> crates/sb-core/src/outbound/tuic.rs:390:13
    |
390 |         use tokio::io::AsyncWrite;
    |             ^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `p`
  --> crates/sb-core/src/adapter/bridge.rs:38:24
   |
38 | fn try_adapter_inbound(p: &InboundParam) -> Option<Arc<dyn InboundService>> {
   |                        ^ help: if this is intentional, prefix it with an underscore: `_p`

warning: unused variable: `p`
  --> crates/sb-core/src/adapter/bridge.rs:47:25
   |
47 | fn try_adapter_outbound(p: &OutboundParam) -> Option<Arc<dyn OutboundConnector>> {
   |                         ^ help: if this is intentional, prefix it with an underscore: `_p`

warning: unused variable: `src`
  --> crates/sb-core/src/router/cache_wire.rs:46:36
   |
46 | pub fn register_router_hot_adapter(src: &'static dyn DecisionCacheSource) {
   |                                    ^^^ help: if this is intentional, prefix it with an underscore: `_src`

For more information about this error, try `rustc --explain E0384`.
warning: `sb-core` (lib) generated 39 warnings
error: could not compile `sb-core` (lib) due to 2 previous errors; 39 warnings emitted
